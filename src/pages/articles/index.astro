---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { db } from "../../lib/firebase.js";
import { collection, getDocs, query, orderBy } from "firebase/firestore";

const title = "お役立ち記事一覧 | シガゴル";
const description = "滋賀のゴルファーに役立つ情報を発信中。練習場の体験談やギアレビュー、スコアアップのコツなど、様々な角度からゴルフライフをサポートします。";

// --- Firebaseから記事データを取得 ---
let allArticles = [];
let fetchError = false;

try {
    const articlesCollection = collection(
        db,
        "artifacts",
        import.meta.env.PUBLIC_FIREBASE_APP_ID,
        "public",
        "data",
        "articles",
    );
    const q = query(articlesCollection, orderBy("createdAt", "desc"));
    const querySnapshot = await getDocs(q);
    
    allArticles = querySnapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
    }));
} catch (error) {
    console.error("Firebase data fetching failed:", error);
    fetchError = true;
}

// --- 記事の仕分け ---
const featuredArticle = allArticles.find(a => a.isFeatured);
const regularArticles = allArticles.filter(a => !a.isFeatured);

const articlesByCategory = regularArticles.reduce((acc, article) => {
  if (article.category) {
    if (!acc[article.category]) {
      acc[article.category] = [];
    }
    acc[article.category].push(article);
  }
  return acc;
}, {});

const categories = Object.keys(articlesByCategory);

// URLの末尾にスラッシュを強制するヘルパー関数
const formatUrl = (url) => {
    if (!url) return '#';
    return url.endsWith('/') ? url : `${url}/`;
};
---

<BaseLayout title={title} description={description}>
  <main class="container mx-auto p-4 md:p-6">
    <div class="text-center mb-10">
      <h1 class="text-2xl md:text-3xl font-bold mb-2">お役立ち記事一覧</h1>
      <p class="text-slate-500">
        練習場の体験談やゴルフ上達のヒントなど
      </p>
    </div>

    { fetchError ? (
      <div class="text-center py-16 bg-red-50 text-red-700 rounded-lg">
        <p class="text-lg font-semibold">記事データの読み込みに失敗しました。</p>
        <p class="text-slate-600 mt-2">時間をおいて再度お試しください。</p>
      </div>
    ) : (
      <div class="space-y-8">
        {/* 注目記事セクション (高さを抑えたレイアウト) */}
        {featuredArticle && (
          <section>
            <h2 class="text-xl font-bold border-b-4 border-green-600 pb-2 mb-4">
              <span class="text-yellow-500">★</span> 注目記事
            </h2>
            <a href={formatUrl(featuredArticle.url)} class="flex bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow duration-300 group">
              <div class="w-1/3 h-32 sm:h-auto bg-slate-100">
                <img src={featuredArticle.imageUrl} alt={featuredArticle.title} class="w-full h-full object-contain" />
              </div>
              <div class="w-2/3 p-3 sm:p-4 flex flex-col justify-center">
                <div>
                  <h3 class="text-base sm:text-lg font-bold text-slate-800 group-hover:text-green-700 transition-colors line-clamp-2">
                    {featuredArticle.title}
                  </h3>
                  <p class="hidden sm:block text-sm text-slate-600 mt-2 line-clamp-2">
                    {featuredArticle.description}
                  </p>
                </div>
                <div class="mt-2 text-right text-sm font-semibold text-green-600">
                  続きを読む →
                </div>
              </div>
            </a>
          </section>
        )}

        {/* カテゴリ別記事セクション */}
        <div class="space-y-4">
          {categories.map(category => (
            <details class="group border rounded-lg overflow-hidden">
              <summary class="cursor-pointer bg-slate-50 p-4 text-xl font-bold flex justify-between items-center list-none group-open:bg-green-50">
                <div>
                  {category}
                  <span class="text-sm text-slate-500 ml-2">({articlesByCategory[category].length}件)</span>
                </div>
                <svg class="w-5 h-5 transition-transform duration-300 group-open:rotate-180" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </summary>
              <div class="p-4">
                <div class="flex overflow-x-auto space-x-4 pb-4 scrollbar-hide">
                  {articlesByCategory[category].slice(0, 4).map(article => (
                    <div class="flex-shrink-0 w-3/4 sm:w-1/2 md:w-1/3">
                      <a href={formatUrl(article.url)} class="block bg-white rounded-lg shadow-md h-full hover:shadow-xl transition-shadow duration-300">
                        <img src={article.imageUrl} alt={article.title} class="w-full h-32 object-contain rounded-t-lg bg-slate-100" />
                        <div class="p-3">
                          <h3 class="font-bold text-base line-clamp-2">{article.title}</h3>
                          <p class="text-xs text-slate-500 mt-1 line-clamp-2">{article.description}</p>
                        </div>
                      </a>
                    </div>
                  ))}
                  
                  {articlesByCategory[category].length > 4 && (
                    <div class="flex-shrink-0 w-3/4 sm:w-1/2 md:w-1/3">
                      <a href={`/articles/category/${category}/`} class="flex items-center justify-center bg-slate-100 rounded-lg shadow-md h-full text-green-700 font-bold hover:bg-green-100 transition-colors duration-300">
                        もっと見る →
                      </a>
                    </div>
                  )}
                </div>
              </div>
            </details>
          ))}
        </div>
      </div>
    )}
  </main>
</BaseLayout>

<style>
  .scrollbar-hide::-webkit-scrollbar { display: none; }
  .scrollbar-hide { -ms-overflow-style: none; scrollbar-width: none; }
</style>