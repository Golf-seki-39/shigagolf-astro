---
// ★★★ [rangeId].astro - 完全版 (LCP最適化 + chart.js + アクセシビリティ修正) ★★★

import BaseLayout from "../../../layouts/BaseLayout.astro";
import ReviewSection from "../../../components/ReviewSection.astro";
import { db } from "../../../lib/firebase.js";
import { Image } from "astro:assets";
import { collection, getDocs } from "firebase/firestore";

// 1. getStaticPaths: ビルド時に各練習場のページを生成するためのパスとデータを取得
export async function getStaticPaths() {
    const appId = import.meta.env.PUBLIC_FIREBASE_APP_ID;
    const publicDataPath = `artifacts/${appId}/public/data`;
    const rangesCollection = collection(db, publicDataPath, 'practice_ranges');
    const querySnapshot = await getDocs(rangesCollection);

   // 'image_archive' ドキュメントを除外してパスを生成
   const paths = querySnapshot.docs
        .filter(doc => doc.id !== 'image_archive')
        .map(doc => ({
            params: { rangeId: doc.id }, // URLの [rangeId] 部分
            props: { range: { id: doc.id, ...doc.data() } } // ページコンポーネントに渡すデータ
        }));
    return paths;
}

// 2. Props と静的変数の定義
const { range } = Astro.props; // getStaticPathsから渡された練習場データ
// 練習場データの各フィールドを変数に展開 (galleryImagesはデフォルトで空配列)
const {
    id, name, address, phone, business_hours, website, scores, area, city, postalCode, reviewCount, avgRating, imageUrl,
    isIndoor = false, is_beginner_friendly = false, hasTracer = false, tracer_brand, tags = [], galleryImages= [],
    yardage, bays, hasApproach = false, hasBunker = false, hasPutter = false, hasUchihodai = false,
    price_ball_weekday_str, price_ball_weekend_str, price_uchihodai_weekday_str, price_uchihodai_weekend_str,
    approach_fee_info, bunker_fee_info, payment_methods, initial_cost, access, parking_info,
    rental_club_info, lefty_bays_info, managerReviewUrl
} = range;

// ページのタイトルと説明文
const title = `${name}の口コミ・評判 | シガゴル`;
const description = `${name}（${area || '滋賀県'}エリア）の口コミ・評判をチェック。料金、設備、ユーザーレビューなど、${name}に関する詳細情報が満載です。`;

// バッジ表示用の配列を作成
const badges = [];
if (isIndoor) badges.push("インドア");
if (is_beginner_friendly) badges.push("初心者に優しい");
if (hasTracer && tracer_brand === "トップトレーサー") badges.push("全打席トップトレーサー");
else if (hasTracer) badges.push("弾道測定器あり");
if (tags && tags.includes("GP併設")) badges.push("GP併設");

// ギャラリー画像を isFeatured でソート (配列であることを保証)
(Array.isArray(galleryImages) ? galleryImages : []).sort((a, b) => (b.isFeatured ? 1 : 0) - (a.isFeatured ? 1 : 0));

// JSON-LD構造化データ (SEO用)
const ldJson = {
    "@context": "https://schema.org",
    "@type": "LocalBusiness",
    name: name,
    image: imageUrl, // メイン画像URL
    telephone: phone,
    address: {
        "@type": "PostalAddress",
        streetAddress: address,
        addressLocality: city,
        addressRegion: "滋賀県",
        postalCode: postalCode,
        addressCountry: "JP",
    },
    // レビューがある場合のみ評価情報を追加
    ...(reviewCount > 0 && {
        aggregateRating: {
            "@type": "AggregateRating",
            ratingValue: avgRating ? parseFloat(avgRating).toFixed(1) : undefined, // 数値に変換
            reviewCount: reviewCount,
        },
    }),
};

// Firebase StorageのURLから ?alt=media を付与する関数
function getPublicUrl(originalUrl) {
    if (!originalUrl || typeof originalUrl !== 'string') return '';
    const urlParts = originalUrl.split('?');
    const path = urlParts[0];
    // すでに ?alt=media がついている場合はそのまま返す
    if (urlParts.length > 1 && urlParts[1].includes('alt=media')) {
      return originalUrl;
    }
    // ? 以降を除去して ?alt=media を付与
    return `${path}?alt=media`;
}


// Firebase Config (クライアントサイドスクリプト用)
const clientFirebaseConfig = {
    apiKey: import.meta.env.PUBLIC_FIREBASE_API_KEY,
    authDomain: import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN,
    projectId: import.meta.env.PUBLIC_FIREBASE_PROJECT_ID,
    storageBucket: import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    appId: import.meta.env.PUBLIC_FIREBASE_APP_ID,
};
---

{/* chart.js の条件付き読み込み (このページでのみheadに追加) */}
<Fragment slot="head">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</Fragment>

<BaseLayout title={title} description={description}>
    {/* SEO用JSON-LD */}
    <script type="application/ld+json" set:html={JSON.stringify(ldJson)} />

    <main class="container mx-auto p-4 md:p-6">
        {/* 戻るリンク */}
        <div class="mb-4">
            <a href="/" class="text-green-700 font-semibold hover:underline">
                ‹ 練習場一覧に戻る
            </a>
        </div>

        <div class="bg-white p-6 md:p-8 rounded-lg shadow-lg">

            {/* ヘッダーセクション */}
            <header>
               {/* メイン画像 (LCP最適化済み) */}
               {imageUrl && (
                 <Image
                    src={imageUrl}
                    alt={`${name}の外観`}
                    class="w-full h-64 object-cover rounded-lg mb-6"
                    width={1200}
                    height={630}
                    format="webp"
                    loading="eager"      {/* LCP要素なので eager */}
                    fetchpriority="high" {/* LCP要素なので high */}
                />
               )}
                {/* 練習場名、エリア、バッジ */}
                <div>
                    <p class="text-lg text-green-700 font-semibold">{area || '滋賀県'}エリア</p> {/* コントラスト修正 */}
                    <h1 class="text-4xl font-bold mt-1">{name}</h1>
                    {badges.length > 0 && (
                        <div class="mt-4 flex flex-wrap gap-2">
                            {badges.map((badge) => (
                                <span class="text-sm bg-blue-100 text-blue-800 font-semibold px-3 py-1 rounded-full">{badge}</span>
                            ))}
                        </div>
                    )}
                </div>
                {/* ヤード数、打席数 */}
                <div class="my-6 grid grid-cols-2 gap-px bg-slate-200 border border-slate-200 rounded-lg overflow-hidden text-center">
                    <div class="bg-white p-4">
                        <p class="text-sm text-slate-500">ヤード数</p>
                        <p class="text-2xl font-bold">{isIndoor ? <span class="whitespace-nowrap">（インドア）</span> : yardage ? `${yardage}yd` : "-"}</p>
                    </div>
                    <div class="bg-white p-4">
                        <p class="text-sm text-slate-500">打席数</p>
                        <p class="text-2xl font-bold">{bays ? `${bays}打席` : "-"}</p>
                    </div>
                </div>
            </header>

            {/* フォトギャラリーセクション */}
            {galleryImages && galleryImages.length > 0 && (
              <section class="mt-8 pt-6 border-t border-slate-200">
                <h2 class="text-2xl font-bold">フォトギャラリー</h2>
                <div id="gallery-grid" class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-4">
                  {galleryImages.map((image, index) => (
                    // 各ギャラリーアイテム
                    <div class="gallery-item hidden">
                      <a href={getPublicUrl(image?.url)} target="_blank" rel="noopener noreferrer" class="block aspect-square group">
                        {/* URLが存在する場合のみ画像を表示 */}
                        {image?.url && (
                          <Image
                            src={getPublicUrl(image.url)}
                            alt={`${name}のギャラリー写真 ${index + 1}（投稿者: ${image.author || '不明'}） ${image.description || ''}`}
                            class="w-full h-full object-cover rounded-lg group-hover:opacity-80 transition-opacity"
                            width={400}
                            height={400}
                            format="webp"
                            fit="cover"    {/* CSSのobject-coverと合わせる */}
                            loading="lazy" {/* スクロールしないと見えないので lazy */}
                            quality={60}   {/* 品質を少し下げて軽量化 */}
                          />
                        )}
                      </a>
                    </div>
                  ))}
                </div>
                {/* もっと見るボタン */}
                {galleryImages.length > 8 && (
                  <div class="mt-6 text-center">
                    <button id="show-more-gallery-btn" class="bg-slate-200 text-slate-800 font-bold py-2 px-6 rounded-lg hover:bg-slate-300 transition">もっと見る</button>
                  </div>
                )}
              </section>
            )}

            {/* 情報セクション (設備、料金、基本情報、関連リンク) */}
            <div class="mt-8 pt-6 border-t border-slate-200 space-y-8">
                {/* 設備情報 */}
                <section>
                    <h2 class="text-2xl font-bold">設備情報</h2>
                    <ul class="mt-2 grid grid-cols-2 sm:grid-cols-3 gap-y-2 gap-x-4 text-slate-600">
                        <li>📡 弾道測定器: {hasTracer ? `あり (${tracer_brand || '機種不明'})` : "なし"}</li>
                        <li>⛳️ アプローチ: {hasApproach ? "あり" : "なし"}</li>
                        <li>🕳️ バンカー: {hasBunker ? "あり" : "なし"}</li>
                        <li>🏌️ パター: {hasPutter ? "あり" : "なし"}</li>
                        <li>💰 打ち放題: {hasUchihodai ? "あり" : "なし"}</li>
                    </ul>
                </section>

                {/* 料金情報 */}
                <section>
                    <h2 class="text-2xl font-bold">料金情報</h2>
                    <div class="mt-2 overflow-x-auto border border-slate-200 rounded-lg">
                        <table class="min-w-full text-sm">
                            <tbody class="text-slate-600">
                                {/* 屋外練習場のみ球単価を表示 */}
                                {!isIndoor && (
                                    <>
                                        <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50 w-1/3 whitespace-nowrap">球単価（平日）</th><td class="py-3 px-4" set:html={price_ball_weekday_str ? price_ball_weekday_str.replace(/\//g, "<br>").replace(/\(/g, "<br>(") : "情報なし"} /></tr>
                                        <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap">球単価（土日祝）</th><td class="py-3 px-4" set:html={price_ball_weekend_str ? price_ball_weekend_str.replace(/\//g, "<br>").replace(/\(/g, "<br>(") : "情報なし"} /></tr>
                                    </>
                                )}
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap">打ち放題（平日）</th><td class="py-3 px-4" set:html={hasUchihodai ? (price_uchihodai_weekday_str ? price_uchihodai_weekday_str.replace(/\//g, "<br>").replace(/\(/g, "<br>(") : "情報なし") : "打放題なし"} /></tr>
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap">打ち放題（土日祝）</th><td class="py-3 px-4" set:html={hasUchihodai ? (price_uchihodai_weekend_str ? price_uchihodai_weekend_str.replace(/\//g, "<br>").replace(/\(/g, "<br>(") : "情報なし") : "打放題なし"} /></tr>
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap">アプローチ練習場</th><td class="py-3 px-4">{approach_fee_info || (hasApproach ? "併設（料金要確認）" : "なし")}</td></tr>
                                <tr><th class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap">バンカー練習場</th><td class="py-3 px-4">{bunker_fee_info || (hasBunker ? "併設（料金要確認）" : "なし")}</td></tr>
                            </tbody>
                        </table>
                    </div>
                    {/* 支払い方法、最低料金目安 */}
                    <ul class="mt-4 space-y-2 text-slate-600 text-sm">
                        <li><strong>支払い方法:</strong> {payment_methods || "情報なし"}</li>
                        <li><strong>最低料金の目安:</strong> {initial_cost || "情報なし"}</li>
                    </ul>
                </section>

                {/* 基本情報 */}
                <section>
                    <h2 class="text-2xl font-bold">基本情報</h2>
                    <div class="mt-2 overflow-x-auto border border-slate-200 rounded-lg">
                        <table class="min-w-full text-sm">
                            <tbody class="text-slate-600">
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50 w-1/4 whitespace-nowrap">営業時間</th><td class="py-3 px-4" set:html={business_hours?.replace(/\n/g, '<br />') || "情報なし"} /></tr>
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50">住所</th><td class="py-3 px-4"><a href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address || '')}`} target="_blank" rel="noopener noreferrer" class="text-green-700 hover:underline">{address || "情報なし"}</a></td></tr>
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50">電話番号</th><td class="py-3 px-4">{phone ? <a href={`tel:${phone.replace(/-/g, "")}`} class="text-green-700 hover:underline">{phone}</a> : "情報なし"}</td></tr>
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50">アクセス</th><td class="py-3 px-4">{access || "情報なし"}</td></tr>
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50">駐車場</th><td class="py-3 px-4">{parking_info || "情報なし"}</td></tr>
                                <tr class="border-b border-slate-200"><th class="py-3 px-4 text-left font-semibold bg-slate-50">レンタルクラブ</th><td class="py-3 px-4">{rental_club_info || "情報なし"}</td></tr>
                                <tr><th class="py-3 px-4 text-left font-semibold bg-slate-50">左利き打席</th><td class="py-3 px-4">{lefty_bays_info || "情報なし"}</td></tr>
                            </tbody>
                        </table>
                    </div>
                </section>

                {/* 関連リンク */}
                <section>
                    <h2 class="text-2xl font-bold">関連リンク</h2>
                    <div class="mt-2 space-y-3">
                        {/* 管理人レビューへのリンク */}
                        {managerReviewUrl && (
                          <a href={managerReviewUrl} target="_blank" rel="noopener noreferrer" class="flex items-center gap-x-3 p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition group border">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" /></svg>
                            <span class="font-semibold text-slate-800 group-hover:underline">この練習場の管理人の体験談を見る</span>
                          </a>
                        )}
                        {/* お役立ち情報一覧へのリンク */}
                        <a href="/articles/" class="flex items-center gap-x-3 p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition group border">
                           <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3h2m0 0h2m-2 0V5m0 2v2m0 0h2"/></svg>
                           <span class="font-semibold text-slate-800 group-hover:underline">お役立ち情報一覧</span>
                        </a>
                        {/* 公式サイトへのリンク */}
                        {website && (
                          <a href={website} target="_blank" rel="noopener noreferrer" class="flex items-center gap-x-3 p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition group border">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" /></svg>
                            <span class="font-semibold text-slate-800 group-hover:underline">公式サイト</span>
                          </a>
                        )}
                    </div>
                </section>
            </div>

            {/* レビューを書くボタン */}
            <div class="my-8 text-center">
                <button id="show-review-form-btn" class="bg-amber-500 text-white font-bold py-3 px-8 rounded-lg hover:bg-amber-700 transition text-lg">この練習場のレビューを書く</button> {/* コントラスト修正 */}
            </div>

            {/* ユーザーレビューセクション */}
            <section class="mt-8 pt-6 border-t border-slate-200">
                <h2 class="text-2xl font-bold mb-4">ユーザーレビュー</h2>
                {/* レビューリストはクライアントサイドJSで描画 */}
                <div id="reviews-list" class="space-y-6">
                    <div id="loading-reviews" class="text-center py-8">
                        <p class="text-slate-500">レビューを読み込んでいます...</p>
                    </div>
                </div>
            </section>

            {/* アクセスマップセクション */}
            <section class="mt-8 pt-6 border-t border-slate-200">
                <h2 class="text-2xl font-bold">アクセスマップ</h2>
                <div class="mt-4 aspect-video w-full overflow-hidden rounded-lg border border-slate-200">
                    {/* ★★★ iframeに title を追加 ★★★ */}
                    <iframe
                        title="アクセスマップ"
                        width="100%"
                        height="100%"
                        style="border:0;"
                        loading="lazy"
                        allowfullscreen=""
                        referrerpolicy="no-referrer-when-downgrade"
                        src={`https://www.google.com/maps/embed/v1/place?key=${import.meta.env.PUBLIC_GOOGLE_MAPS_API_KEY}&q=${encodeURIComponent(name + " " + address)}`}>
                    </iframe>
                </div>
            </section>

            {/* レビュー投稿フォーム (初期状態は非表示) */}
            <div id="review-form-wrapper" class="hidden">
                <ReviewSection range={range} /> {/* レビュー投稿コンポーネント */}
            </div>
        </div>
    </main>
</BaseLayout>


{/* クライアントサイドJavaScript */}
<script define:vars={{ rangeId: range.id, passedConfig: clientFirebaseConfig, mapUrl: mapEmbedUrl }}>

    // --- Firebase Modulesの遅延インポート ---
    async function getFirebaseModules() { /* ... */ }

    // --- Helper Functions ---
    const escapeHTML = (str) => { /* ... */ };
    function getPublicUrl(originalUrl) { /* ... */ }

    // --- Create Review Article ---
    function createReviewArticle(review) { /* ... alt attribute fixed ... */ }

    // --- Render Radar Charts ---
    function renderRadarCharts() { /* ... */ }

    // --- Load Reviews ---
    async function loadReviews() { /* ... */ }

    // --- Initialize Static Scripts ---
    function initializeStaticScripts() { /* ... review button and gallery button logic ... */ }

    // ★★★ Intersection Observer for Lazy Loading Map ★★★
    function lazyLoadMap() {
      const mapSection = document.getElementById('map-section');
      const mapIframe = document.getElementById('map-iframe');

      if (!mapSection || !mapIframe || !mapIframe.dataset.src) {
        console.warn('Map section or iframe not found for lazy loading.');
        return;
      }

      // Intersection Observer の設定
      const observerOptions = {
        root: null, // ビューポートをルートとする
        rootMargin: '0px', // マージンなし
        threshold: 0.1 // 要素が10%見えたらトリガー
      };

      // Intersection Observer のコールバック関数
      const observerCallback = (entries, observer) => {
        entries.forEach(entry => {
          // 要素がビューポート内に入ったら
          if (entry.isIntersecting) {
            // iframe の data-src から src にURLを設定して読み込み開始
            mapIframe.src = mapIframe.dataset.src;
            // 一度読み込んだら監視を解除
            observer.unobserve(mapSection);
            console.log('Google Map loaded lazily.');
          }
        });
      };

      // Intersection Observer のインスタンスを作成
      const observer = new IntersectionObserver(observerCallback, observerOptions);

      // マップセクションの監視を開始
      observer.observe(mapSection);
    }

    // --- DOMContentLoadedイベントリスナー (初期化処理の実行) ---
    document.addEventListener('DOMContentLoaded', () => {
        initializeStaticScripts(); // 静的要素の初期化
        loadReviews();             // レビューの読み込み開始
        lazyLoadMap();             // ★★★ マップの遅延読み込み監視を開始 ★★★
    });

    // --- カスタムイベント 'reviewPosted' のリスナー ---
    document.addEventListener('reviewPosted', (event) => { /* ... */ });

</script>
