---
// ★★★ 修正3: 不要なReviewChartコンポーネントのimportを削除 ★★★
import BaseLayout from "../../layouts/BaseLayout.astro";
import ReviewSection from "../../components/ReviewSection.astro";
import { db } from "../../lib/firebase.js";
import { collection, getDocs } from "firebase/firestore";

// getStaticPathsは変更なし
export async function getStaticPaths() {
    const appId = import.meta.env.PUBLIC_FIREBASE_APP_ID;
    const publicDataPath = `artifacts/${appId}/public/data`;
    const rangesCollection = collection(db, publicDataPath, 'practice_ranges');
    const querySnapshot = await getDocs(rangesCollection);

    const paths = querySnapshot.docs.map(doc => ({
        params: { rangeId: doc.id },
        props: { range: { id: doc.id, ...doc.data() } }
    }));
    return paths;
}

const { range } = Astro.props;
const { name, address, phone, businessHours, website, scores, area, city, postalCode, reviewCount, avgRating, imageUrl, isIndoor, is_beginner_friendly, hasTracer, tracer_brand, tags, galleryImages, yardage, bays, hasApproach, hasBunker, hasPutter, hasUchihodai, price_ball_weekday_str, price_ball_weekend_str, price_uchihodai_weekday_str, price_uchihodai_weekend_str, approach_fee_info, bunker_fee_info, payment_methods, initial_cost, access, parking_info, rental_club_info, lefty_bays_info, managerReviewUrl } = range;

const title = `${name}の口コミ・評判 | シガゴル`;
const description = `${name}（${area}エリア）の口コミ・評判をチェック。料金、設備、ユーザーレビューなど、${name}に関する詳細情報が満載です。`;

const badges = [];
if (isIndoor) badges.push("インドア");
if (is_beginner_friendly) badges.push("初心者に優しい");
if (hasTracer && tracer_brand === "トップトレーサー")
    badges.push("全打席トップトレーサー");
else if (hasTracer) badges.push("弾道測定器あり");
if (tags && tags.includes("GP併設")) badges.push("GP併設");

galleryImages?.sort((a, b) => (b.isFeatured ? 1 : 0) - (a.isFeatured ? 1 : 0));

const ldJson = {
    "@context": "https://schema.org",
    "@type": "LocalBusiness",
    name: name,
    image: imageUrl,
    telephone: phone,
    address: {
        "@type": "PostalAddress",
        streetAddress: address,
        addressLocality: city,
        addressRegion: "滋賀県",
        postalCode: postalCode,
        addressCountry: "JP",
    },
    ...(reviewCount > 0 && {
        aggregateRating: {
            "@type": "AggregateRating",
            ratingValue: avgRating,
            reviewCount: reviewCount,
        },
    }),
};

function getThumbnailUrl(originalUrl) {
    if (!originalUrl) return '';
    const urlParts = originalUrl.split('?');
    const path = urlParts[0];
    const extensionIndex = path.lastIndexOf('.');
    if (extensionIndex === -1) return `${path}?alt=media`;
    const basePath = path.substring(0, extensionIndex);
    const extension = path.substring(extensionIndex);
    const thumbnailPath = `${basePath}_400x400${extension}`;
    return `${thumbnailPath}?alt=media`;
}

function getPublicUrl(originalUrl) {
    if (!originalUrl) return '';
    const urlParts = originalUrl.split('?');
    const path = urlParts[0];
    return `${path}?alt=media`;
}
---

<BaseLayout title={title} description={description}>
    <script type="application/ld+json" set:html={JSON.stringify(ldJson)} />

    <main class="container mx-auto p-4 md:p-6">
        <div class="mb-4">
            <a href="/" class="text-green-700 font-semibold hover:underline"
                >‹ 練習場一覧に戻る</a
            >
        </div>

        <div class="bg-white p-6 md:p-8 rounded-lg shadow-lg">
            {/* あなたの元のHTML部分は完全に保持されています */}
            <header>
                <img
                    src={imageUrl}
                    alt={`${name}の外観`}
                    class="w-full h-64 object-cover rounded-lg mb-6"
                    loading="lazy"
                />
                <div>
                    <p class="text-lg text-green-600 font-semibold">{area}エリア</p>
                    <h1 class="text-4xl font-bold mt-1">{name}</h1>
                    {badges.length > 0 && (
                        <div class="mt-4 flex flex-wrap gap-2">
                            {badges.map((badge) => (
                                <span class="text-sm bg-blue-100 text-blue-800 font-semibold px-3 py-1 rounded-full">{badge}</span>
                            ))}
                        </div>
                    )}
                </div>
                <div class="my-6 grid grid-cols-2 gap-px bg-slate-200 border border-slate-200 rounded-lg overflow-hidden text-center">
                    <div class="bg-white p-4">
                        <p class="text-sm text-slate-500">ヤード数</p>
                        <p class="text-2xl font-bold">{isIndoor ? <span class="whitespace-nowrap">（インドア）</span> : yardage ? `${yardage}yd` : "-"}</p>
                    </div>
                    <div class="bg-white p-4">
                        <p class="text-sm text-slate-500">打席数</p>
                        <p class="text-2xl font-bold">{bays ? `${bays}打席` : "-"}</p>
                    </div>
                </div>
            </header>
            
            {galleryImages && galleryImages.length > 0 && (
              <section class="mt-8 pt-6 border-t border-slate-200">
                <h2 class="text-2xl font-bold">フォトギャラリー</h2>
                <div id="gallery-grid" class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-4">
                  {galleryImages.map((image, index) => (
                    <div class="gallery-item hidden">
                      <a href={getPublicUrl(image.url)} target="_blank" rel="noopener noreferrer" class="block aspect-square group">
                        <img 
                          src={getThumbnailUrl(image.url)}
                          alt={`${name}のギャラリー写真 ${index + 1}（投稿者: ${image.author}） ${image.description || ''}`}
                          class="w-full h-full object-cover rounded-lg group-hover:opacity-80 transition-opacity"
                          loading="lazy"
                        />
                      </a>
                    </div>
                  ))}
                </div>
                {galleryImages.length > 8 && (
                  <div class="mt-6 text-center">
                    <button id="show-more-gallery-btn" class="bg-slate-200 text-slate-800 font-bold py-2 px-6 rounded-lg hover:bg-slate-300 transition">もっと見る</button>
                  </div>
                )}
              </section>
            )}

            <div class="mt-8 pt-6 border-t border-slate-200 space-y-8">
                {/* ... (設備情報、料金情報、基本情報セクションは変更なし) ... */}
                 <section>
                    <h2 class="text-2xl font-bold">料金情報</h2>
                    <div
                        class="mt-2 overflow-x-auto border border-slate-200 rounded-lg"
                    >
                        <table class="min-w-full text-sm">
                            <tbody class="text-slate-600">
                                {!isIndoor && (
                                    <>
                                        <tr class="border-b border-slate-200">
                                            <th
                                                class="py-3 px-4 text-left font-semibold bg-slate-50 w-1/3 whitespace-nowrap"
                                            >
                                                球単価（平日）
                                            </th>
                                            <td
                                                class="py-3 px-4"
                                                set:html={price_ball_weekday_str
                                                    ? price_ball_weekday_str
                                                          .replace(/\//g, "<br>")
                                                          .replace(/\(/g, "<br>(")
                                                    : "情報なし"}
                                            />
                                        </tr>
                                        <tr class="border-b border-slate-200">
                                            <th
                                                class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap"
                                            >
                                                球単価（土日祝）
                                            </th>
                                            <td
                                                class="py-3 px-4"
                                                set:html={price_ball_weekend_str
                                                    ? price_ball_weekend_str
                                                          .replace(/\//g, "<br>")
                                                          .replace(/\(/g, "<br>(")
                                                    : "情報なし"}
                                            />
                                        </tr>
                                    </>
                                )}

                                <tr class="border-b border-slate-200">
                                    <th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap"
                                    >
                                        打ち放題（平日）
                                    </th>
                                    <td
                                        class="py-3 px-4"
                                        set:html={hasUchihodai
                                            ? price_uchihodai_weekday_str
                                                ? price_uchihodai_weekday_str
                                                      .replace(/\//g, "<br>")
                                                      .replace(/\(/g, "<br>(")
                                                : "情報なし"
                                            : "打放題なし"}
                                    />
                                </tr>
                                <tr class="border-b border-slate-200">
                                    <th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap"
                                    >
                                        打ち放題（土日祝）
                                    </th>
                                    <td
                                        class="py-3 px-4"
                                        set:html={hasUchihodai
                                            ? price_uchihodai_weekend_str
                                                ? price_uchihodai_weekend_str
                                                      .replace(/\//g, "<br>")
                                                      .replace(/\(/g, "<br>(")
                                                : "情報なし"
                                            : "打放題なし"}
                                    />
                                </tr>
                                <tr class="border-b border-slate-200">
                                    <th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap"
                                    >
                                        アプローチ練習場
                                    </th>
                                    <td class="py-3 px-4">{approach_fee_info || "情報なし"}</td>
                                </tr>
                                <tr>
                                    <th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50 whitespace-nowrap"
                                    >
                                        バンカー練習場
                                    </th>
                                    <td class="py-3 px-4">{bunker_fee_info || "情報なし"}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                     <ul class="mt-4 space-y-2 text-slate-600 text-sm">
                        <li>
                            <strong>支払い方法:</strong>
                            {payment_methods || "情報なし"}
                        </li>
                        <li>
                            <strong>最低料金の目安:</strong>
                            {initial_cost || "情報なし"}
                        </li>
                    </ul>
                </section>
                <section>
                    <h2 class="text-2xl font-bold">基本情報</h2>
                    <div class="mt-2 overflow-x-auto border border-slate-200 rounded-lg">
                        <table class="min-w-full text-sm">
                            <tbody class="text-slate-600">
                                 <tr class="border-b border-slate-200"
                                    ><th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50 w-1/4 whitespace-nowrap"
                                        >営業時間</th
                                    ><td class="py-3 px-4"
                                        >{
                                            businessHours || "情報なし"
                                        }</td
                                    ></tr
                                >
                                <tr class="border-b border-slate-200"
                                    ><th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50"
                                        >住所</th
                                    ><td class="py-3 px-4"
                                        ><a
                                            href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address || '')}`}
                                            target="_blank"
                                            rel="noopener noreferrer"
                                            class="text-green-700 hover:underline"
                                            >{address || "情報なし"}</a
                                        ></td
                                    ></tr
                                >
                                <tr class="border-b border-slate-200"
                                    ><th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50"
                                        >電話番号</th
                                    ><td class="py-3 px-4"
                                        ><a
                                            href={`tel:${phone}`}
                                            class="text-green-700 hover:underline"
                                            >{phone || "情報なし"}</a
                                        ></td
                                    ></tr
                                >
                                <tr class="border-b border-slate-200"
                                    ><th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50"
                                        >アクセス</th
                                    ><td class="py-3 px-4"
                                        >{access || "情報なし"}</td
                                    ></tr
                                >
                                <tr class="border-b border-slate-200"
                                    ><th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50"
                                        >駐車場</th
                                    ><td class="py-3 px-4"
                                        >{parking_info || "情報なし"}</td
                                    ></tr
                                >
                                <tr class="border-b border-slate-200"
                                    ><th
                                        class="py-3 px-4 text-left font-semibold bg-slate-50"
                                        >レンタルクラブ</th
                                    ><td class="py-3 px-4"
                                        >{
                                            rental_club_info || "情報なし"
                                        }</td
                                    ></tr
                                >
                                <tr><th class="py-3 px-4 text-left font-semibold bg-slate-50">左利き打席</th><td class="py-3 px-4">{lefty_bays_info || "情報なし"}</td></tr>
                            </tbody>
                        </table>
                    </div>
                </section>
                
                <section>
                    <h2 class="text-2xl font-bold">関連リンク</h2>
                    <div class="mt-2 space-y-3">
                        {managerReviewUrl && (<a href={managerReviewUrl} target="_blank" rel="noopener noreferrer" class="flex items-center gap-x-3 p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition group border"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" /></svg><span class="font-semibold text-slate-800 group-hover:underline">この練習場の管理人の体験談を見る</span></a>)}
                        <a href="/articles" class="flex items-center gap-x-3 p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition group border"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3h2m0 0h2m-2 0V5m0 2v2m0 0h2"/></svg><span class="font-semibold text-slate-800 group-hover:underline">お役立ち情報一覧</span></a>
                        {website && (<a href={website} target="_blank" rel="noopener noreferrer" class="flex items-center gap-x-3 p-3 bg-slate-50 rounded-lg hover:bg-slate-100 transition group border"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" /></svg><span class="font-semibold text-slate-800 group-hover:underline">公式サイト</span></a>)}
                    </div>
                </section>
            </div>

            <div class="my-8 text-center">
                <button id="show-review-form-btn" class="bg-amber-500 text-white font-bold py-3 px-8 rounded-lg hover:bg-amber-600 transition text-lg">この練習場のレビューを書く</button>
            </div>

            <section class="mt-8 pt-6 border-t border-slate-200">
                <h2 class="text-2xl font-bold mb-4">ユーザーレビュー</h2>
                <div id="reviews-list" class="space-y-6">
                    <div id="loading-reviews" class="text-center py-8">
                        <p class="text-slate-500">レビューを読み込んでいます...</p>
                    </div>
                </div>
            </section>

            <section class="mt-8 pt-6 border-t border-slate-200">
                <h2 class="text-2xl font-bold">アクセスマップ</h2>
                <div class="mt-4 aspect-video w-full overflow-hidden rounded-lg border border-slate-200">
                    <iframe width="100%" height="100%" style="border:0" loading="lazy" allowfullscreen referrerpolicy="no-referrer-when-downgrade" src={`https://www.google.com/maps/embed/v1/place?key=${import.meta.env.PUBLIC_GOOGLE_MAPS_API_KEY}&q=${encodeURIComponent(name + " " + address)}`}></iframe>
                </div>
            </section>

            <div id="review-form-wrapper" class="hidden">
                <ReviewSection range={range} />
            </div>
        </div>
    </main>
</BaseLayout>


<script define:vars={{ rangeId: range.id, appId: import.meta.env.PUBLIC_FIREBASE_APP_ID }}>
    // FirebaseのクライアントSDKモジュールを動的にインポート
    async function getFirebaseModules() {
        const firebaseConfig = {
            apiKey: import.meta.env.PUBLIC_FIREBASE_API_KEY,
            authDomain: import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN,
            projectId: import.meta.env.PUBLIC_FIREBASE_PROJECT_ID,
            storageBucket: import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET,
            messagingSenderId: import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
            appId: appId,
        };
        const { initializeApp } = await import('firebase/app');
        const { getFirestore, collection, getDocs, query, orderBy } = await import('firebase/firestore');
        return { initializeApp, getFirestore, collection, getDocs, query, orderBy, firebaseConfig };
    }
    
    // レビュー画像のURLからトークンを除去する関数
    function getPublicUrlForClient(originalUrl) {
        if (!originalUrl) return '';
        try {
            const url = new URL(originalUrl);
            return `${url.origin}${url.pathname}?alt=media`;
        } catch (e) {
            const urlParts = originalUrl.split('?');
            return `${urlParts[0]}?alt=media`;
        }
    }

    // レビューデータからHTML要素を作成するヘルパー関数
    function createReviewArticle(review) {
        const article = document.createElement('article');
        article.className = 'border-b border-slate-200 pb-6';
        const stars = '★'.repeat(Math.round(review.rating)) + '☆'.repeat(5 - Math.round(review.rating));
        const date = review.createdAt?.toDate ? review.createdAt.toDate().toLocaleDateString('ja-JP') : '日付不明';
        const isAdminReview = review.author === "関＠シガゴル管理人";
        let imagesHTML = '';
        if (review.imageUrls && review.imageUrls.length > 0) {
            imagesHTML = `<div class="mt-4 flex flex-wrap gap-3">${review.imageUrls.map(url => {
                const publicUrl = getPublicUrlForClient(url);
                return `<a href="${publicUrl}" target="_blank" rel="noopener noreferrer" class="block"><img src="${publicUrl}" alt="投稿写真" class="w-28 h-28 sm:w-32 sm:h-32 md:w-40 md:h-40 object-cover rounded-md hover:opacity-80 transition" loading="lazy" /></a>`;
            }).join('')}</div>`;
        }
        let scoresHTML = '';
        if (isAdminReview && review.scores) {
            scoresHTML = `<div class="my-4 max-w-sm mx-auto"><canvas class="radar-chart-canvas" data-scores='${JSON.stringify(review.scores)}'></canvas></div>`;
        }
        article.innerHTML = `<div class="flex items-center gap-x-4"><div class="text-amber-500 text-xl" title="${review.rating}つ星">${stars}</div>${isAdminReview ? `<span class="bg-green-100 text-green-800 text-xs font-semibold px-2.5 py-0.5 rounded-full">公式レビュー</span>` : ''}</div><h3 class="text-lg font-bold mt-2">${review.title}</h3>${scoresHTML}<p class="text-slate-600 my-4 whitespace-pre-wrap">${review.body}</p>${imagesHTML}<p class="text-sm text-slate-400 text-right mt-4">投稿者: ${review.author} / 投稿日: ${date}</p>`;
        return article;
    }

    // Chart.jsでレーダーチャートを描画する関数
    function renderRadarCharts() {
        if (typeof Chart === 'undefined') return;
        document.querySelectorAll('.radar-chart-canvas').forEach(canvas => {
            if (canvas.chart) return; 
            const scoresData = JSON.parse(canvas.dataset.scores);
            const chart = new Chart(canvas, {
                type: 'radar',
                data: { labels: Object.keys(scoresData), datasets: [{ label: '評価スコア', data: Object.values(scoresData), fill: true, backgroundColor: 'rgba(34, 197, 94, 0.2)', borderColor: 'rgb(22, 163, 74)', pointBackgroundColor: 'rgb(22, 163, 74)', pointBorderColor: '#fff', pointHoverBackgroundColor: '#fff', pointHoverBorderColor: 'rgb(22, 163, 74)' }] },
                options: { responsive: true, maintainAspectRatio: false, scales: { r: { angleLines: { display: false }, suggestedMin: 0, suggestedMax: 5, pointLabels: { font: { size: 10 } } } }, plugins: { legend: { display: false } } }
            });
            canvas.chart = chart;
        });
    }

    // ページが読み込まれたらレビューを取得して描画
    document.addEventListener('DOMContentLoaded', async () => {
        const reviewsListContainer = document.getElementById('reviews-list');
        try {
            const { initializeApp, getFirestore, collection, getDocs, query, orderBy, firebaseConfig } = await getFirebaseModules();
            const app = initializeApp(firebaseConfig);
            const db = getFirestore(app);
            const publicDataPath = `artifacts/${appId}/public/data`;
            // ★★★ ご指摘のバグ修正: range.id -> rangeId に変更 ★★★
            const reviewsCollectionRef = collection(db, publicDataPath, 'practice_ranges', rangeId, 'reviews');
            const q = query(reviewsCollectionRef, orderBy("createdAt", "desc"));
            const querySnapshot = await getDocs(q);
            
            reviewsListContainer.innerHTML = '';
            if (querySnapshot.empty) {
                reviewsListContainer.innerHTML = `<p id="no-reviews-message" class="text-center text-slate-500 py-8">この練習場にはまだレビューがありません。</p>`;
                return;
            }

            // 管理人レビューを先頭にするソート処理
            const reviews = querySnapshot.docs.map(doc => doc.data());
            const adminReviews = reviews.filter(review => review.author === "関＠シガゴル管理人");
            const userReviews = reviews.filter(review => review.author !== "関＠シガゴル管理人");
            const sortedReviews = [...adminReviews, ...userReviews];

            sortedReviews.forEach(reviewData => {
                const article = createReviewArticle(reviewData);
                reviewsListContainer.appendChild(article);
            });
            
            renderRadarCharts();
        } catch (error) {
            console.error("レビューの読み込みに失敗しました:", error);
            reviewsListContainer.innerHTML = `<p class="text-center text-red-600 py-8">レビューの読み込み中にエラーが発生しました。</p>`;
        }
    });

    // ページ表示関連のスクリプト
    document.addEventListener("DOMContentLoaded", () => {
        const showButton = document.getElementById("show-review-form-btn");
        const formWrapper = document.getElementById("review-form-wrapper");
        if (showButton && formWrapper) {
            showButton.addEventListener("click", () => {
                formWrapper.classList.remove("hidden");
                showButton.style.display = "none";
                formWrapper.scrollIntoView({ behavior: "smooth" });
            });
        }

        const galleryItems = document.querySelectorAll('.gallery-item');
        const showMoreBtn = document.getElementById('show-more-gallery-btn');
        if (galleryItems.length > 0) {
            galleryItems.forEach((item, index) => {
                if (index < 8) item.classList.remove('hidden');
            });
        }
        if (showMoreBtn) {
            showMoreBtn.addEventListener('click', () => {
                galleryItems.forEach((item, index) => {
                    if (index >= 8) item.classList.remove('hidden');
                });
                showMoreBtn.style.display = 'none';
            });
        }
    });
</script>

