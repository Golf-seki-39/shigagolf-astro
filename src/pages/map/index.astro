---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { db } from '../../lib/firebase.js';
import { collection, getDocs } from 'firebase/firestore';

const pageTitle = "マップで探す | シガゴル";
const description = "滋賀県内のゴルフ練習場を地図上で探せます。現在地から一番近い練習場や、各エリアの練習場の場所が一目で分かります。";


const rangesCollection = collection(db, 'artifacts', import.meta.env.PUBLIC_FIREBASE_APP_ID, 'public', 'data', 'practice_ranges');
const querySnapshot = await getDocs(rangesCollection);
const ranges = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
---
<BaseLayout pageTitle={pageTitle}>
  <main class="container mx-auto p-4 md:p-6">
    <div class="text-center mb-6">
      <h1 class="text-2xl md:text-3xl font-bold mb-2">マップで探す</h1>
      <p class="text-slate-500">地図上のピンをクリックして、<br>近くの練習場を見つけよう。</p>
    </div>

    <div class="relative">
      <div id="map" class="h-[70vh] rounded-lg shadow-md z-0"></div>
      <button id="locate-me-btn" class="absolute top-3 right-3 z-10 bg-white p-2 rounded-full shadow-lg hover:bg-gray-100 transition" aria-label="現在地をマップに表示">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M12 2a10 10 0 100 20 10 10 0 000-20zm0 14a4 4 0 110-8 4 4 0 010 8z" /></svg>
      </button>
    </div>
  </main>

  {/* CSSの読み込み (順序はこのままでOK) */}
  <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.css" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.Default.css" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>

  {/* --- ▼▼▼ 【重要】integrity属性を削除して修正 ▼▼▼ --- */}
  {/* ① Leaflet本体を先に読み込む (これは変更なし) */}
  <script is:inline src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
  
  {/* ② 次にプラグインを読み込む (integrity属性を削除) */}
  <script is:inline src="https://unpkg.com/leaflet.markercluster@1.5.3/dist/leaflet.markercluster.js" crossorigin=""></script>
  <script define:vars={{ ranges }}>
    // この部分のJavaScriptは変更ありません
    const map = L.map('map').setView([35.15, 136.1], 10);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    const golfIcon = L.icon({
      iconUrl: '/icons/golf-pin.png', 
      iconSize: [40, 40],
      iconAnchor: [20, 40],
      popupAnchor: [0, -40]
    });

    const markers = L.markerClusterGroup();

    ranges.forEach(range => {
      if (range.lat && range.lng) {
        const marker = L.marker([range.lat, range.lng], { icon: golfIcon });
        
        marker.bindPopup(`<b><a href="/ranges/${range.id}" class="text-green-700 hover:underline">${range.name}</a></b><br>${range.address}`);
        marker.bindTooltip(range.name, {
          permanent: true,
          direction: 'right',
          offset: [20, -10],
          className: 'range-label'
        }).openTooltip();

        markers.addLayer(marker);
      }
    });

    map.addLayer(markers);

    let userMarker;
    const findUserLocation = () => {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const lat = position.coords.latitude;
          const lng = position.coords.longitude;
          
          map.setView([lat, lng], 13);
          
          if (userMarker) {
            map.removeLayer(userMarker);
          }

          userMarker = L.marker([lat, lng], {
            icon: L.divIcon({
              className: 'current-location-marker',
              html: '<div class="ring"></div><div class="dot"></div>',
              iconSize: [20, 20]
            })
          }).addTo(map)
            .bindPopup("あなたの現在地").openPopup();
        },
        () => {
          alert('現在地の取得に失敗しました。ブラウザの位置情報設定を確認してください。');
        }
      );
    };
    const locateButton = document.getElementById('locate-me-btn');
    locateButton.addEventListener('click', findUserLocation);
    findUserLocation();

  </script>
  
  <style>
    /* style部分は変更ありません */
    .range-label {
      background-color: rgba(255, 255, 255, 0.85);
      border: none;
      border-radius: 4px;
      box-shadow: none;
      font-size: 0.8rem;
      font-weight: bold;
      padding: 2px 6px;
      color: #333;
    }
    .current-location-marker .dot {
      background: #2563eb;
      width: 12px;
      height: 12px;
      border-radius: 50%;
      border: 2px solid white;
      box-shadow: 0 0 5px rgba(0,0,0,0.5);
    }
    .current-location-marker .ring {
      position: absolute;
      top: -4px;
      left: -4px;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: rgba(37, 99, 235, 0.2);
      animation: pulse 1.5s infinite;
    }
    @keyframes pulse {
      0% { transform: scale(1); opacity: 0.5; }
      100% { transform: scale(3); opacity: 0; }
    }
  </style>
</BaseLayout>